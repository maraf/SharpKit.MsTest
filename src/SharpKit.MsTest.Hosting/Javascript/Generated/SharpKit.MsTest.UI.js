/* Generated by SharpKit 5 v5.4.4 */

if (typeof(JsTypes) == "undefined")
    var JsTypes = [];
var SharpKit$MsTest$UI$TestClassProvider = {
    fullname: "SharpKit.MsTest.UI.TestClassProvider",
    baseTypeName: "System.Object",
    assemblyName: "SharpKit.MsTest.UI",
    Kind: "Class",
    definition: {
        ctor: function (){
            System.Object.ctor.call(this);
        },
        GetTestClasses: function (){
            var result = new System.Collections.Generic.List$1.ctor(System.Type.ctor);
            for (var $i2 = 0,$t2 = this.GetClasses(),$l2 = $t2.length,type = $t2[$i2]; $i2 < $l2; $i2++, type = $t2[$i2]){
            }
            return result;
        },
        GetClasses: function (){
            return JsCompiler.Types;
        }
    },
    ctors: [{
        name: "ctor",
        parameters: []
    }
    ],
    IsAbstract: false
};
JsTypes.push(SharpKit$MsTest$UI$TestClassProvider);
var SharpKit$MsTest$UI$TestPresenter = {
    fullname: "SharpKit.MsTest.UI.TestPresenter",
    baseTypeName: "System.Object",
    assemblyName: "SharpKit.MsTest.UI",
    Kind: "Class",
    definition: {
        ctor: function (){
            this.testClassProvider = new SharpKit.MsTest.UI.TestClassProvider.ctor();
            System.Object.ctor.call(this);
        },
        Render: function (root){
            var testClasses = this.testClassProvider.GetTestClasses();
            var html = new System.Text.StringBuilder.ctor();
            if (testClasses.get_Count() == 0){
                html.Append$$String("No test classes found.");
            }
            else {
                var $it2 = testClasses.GetEnumerator();
                while ($it2.MoveNext()){
                    var testClass = $it2.get_Current();
                    html.Append$$String(testClass.get_FullName());
                    html.Append$$String("<br />");
                }
            }
            root.html(html.toString());
        }
    },
    ctors: [{
        name: "ctor",
        parameters: []
    }
    ],
    IsAbstract: false
};
JsTypes.push(SharpKit$MsTest$UI$TestPresenter);
var TestRuntime = {
    fullname: "TestRuntime",
    baseTypeName: "System.Object",
    staticDefinition: {
        Start: function (root){
            if (root == null)
                root = $(document.body);
            else
                root = $(root);
            var presenter = new SharpKit.MsTest.UI.TestPresenter.ctor();
            presenter.Render(root);
            return presenter;
        }
    },
    assemblyName: "SharpKit.MsTest.UI",
    Kind: "Class",
    definition: {
        ctor: function (){
            System.Object.ctor.call(this);
        }
    },
    ctors: [],
    IsAbstract: true
};
JsTypes.push(TestRuntime);

